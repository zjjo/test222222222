clc;
clear;

% this is the input variable table, generated by CCD. details in function
% experiment_design

dCC_dry_test=experiment_design(2,"False","True");
dCC_wet_test=experiment_design(3,"True","True");
dCC_dry=experiment_design(2,"False","False");
dCC_wet=experiment_design(3,"True","False");
%save("dCC_dry");

% grid generation is changeable
% NOE: number of element
% NOE_dp: NOE along the fin depth
% NOE_h: NOE along the fin height
NOE_dp=5;
NOE_h=5;

%--------------------------------------------------------------------------
% interval is to utilize the SPMD function, for parallel computation of
% MATLAB. for instance, if your computer has 4 cores. if you set the
% interval is 5, then each core would be responsible for the calculation of
% 5 cases. it is experimented that if the grid is 200*200, the wet
% condition may need 8h(mostly above), dry cases may need 6h (mostly above)
%--------------------------------------------------------------------------
interval= 10;
parpool("local",2);
spmd
    for i = 1:interval

        % all the input variables. the order of variables must not be
        % disorganized.

        % experment index, assist to organize the input variable table and
        % output variable. in case we are misalign them.
        exper_index=i+interval*(labindex-1);

        % mass flow rate
        input.mdot_ref=dCC_dry(exper_index,1);

        % air volecity
        input.vol_air=dCC_dry(exper_index,2);

        % inlet air temperature
        input.T_air_in=dCC_dry(exper_index,3);

        % inlet coolant temperature
        input.T_coolant_in=dCC_dry(exper_index,4);

        %-----------------------------------------------------------------
        % inlet relative humidty of the air. only used in wet condition. if
        % it is dry condition we are calculated. comment this input and
        % name the fin depth as 5, fin height as 6,... until 9.
        %-----------------------------------------------------------------
       % input.RH=dCC_dry(exper_index,5);

        % fin depth
        input.fin_depth=dCC_dry(exper_index,5);

        % fin height
        input.fin_height=dCC_dry(exper_index,6);

        % air side heat transfer coefficient
        input.AHTC=dCC_dry(exper_index,7);

        % coolant side heat transfer coefficient
        input.RHTC=dCC_dry(exper_index,8);

        % half spacing of the fin
        input.fin_halfspacing=dCC_dry(exper_index,9);
        input.exper_index=exper_index;

        
        input.hydraulic_diameter=dCC_dry(exper_index,10);
        input.wetted_perimeter=dCC_dry(exper_index,11);


        % micro_fully_wet: calculate the wet condition
        % micro_dry:function calculate the dry condition, note that the RH
        % has to be commented.
        output_dry(i)=micro_dry(input,NOE_h,NOE_dp);
    end
    
end

% extract the calculated result from different workers.
work1=output_dry{1};
work2=output_dry{2};

allresults=[work1,work2];
Test=zeros(20,2);
for i=1:20
    Test(i,1)=allresults.Q_numerical;
end
for i=1:20
    Test(i,2)=dCC_dry(i,7);
end
for i=1:20
    Test(i,3)=dCC_dry(i,8);
end

for i=1:20
    Test(i,4)=dCC_dry(i,3);
end
for i=1:20
    Test(i,5)=dCC_dry(i,6);
end

result1=zeros(20,1);
for i=1:20
    result1(i,1)=dCC_dry(i,7)-5*i;
end





